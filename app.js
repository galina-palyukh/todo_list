document.addEventListener("DOMContentLoaded", function () {    let body = document.querySelector("body");    let table = document.querySelector(".table-todo");    let addBtn = document.querySelector(".box-add__btn");    let addInput = document.querySelector(".box-add__field");    addBtn.addEventListener("click", addTask);    addInput.addEventListener("keypress", function (keyEvent) {        if (keyEvent.key === "Enter") {            addTask();        }    });    const titleTaskArrLocalStorage = JSON.parse(localStorage.getItem('titleTaskArr')) || [];    const dateTaskArrLocalStorage = JSON.parse(localStorage.getItem("dateTaskArr")) || [];    function createTask(titleVariable, dateVariable) {        let row = document.createElement("tr");        row.classList.add("table-todo__row");        table.appendChild(row);        let cellStatus = document.createElement("td");        cellStatus.classList.add("table-todo__cell");        row.appendChild(cellStatus);        let  boxStatus = document.createElement("div");        boxStatus.classList.add("table-todo__status");        cellStatus.appendChild(boxStatus);        boxStatus.innerHTML = "<input type=\"checkbox\">";        let cellTitle = document.createElement("td");        cellTitle.classList.add("table-todo__cell");        row.appendChild(cellTitle);        let boxTitle = document.createElement("div");        boxTitle.classList.add("table-todo__title");        cellTitle.appendChild(boxTitle);        boxTitle.innerText = titleVariable;        let cellDate = document.createElement("td");        cellDate.classList.add("table-todo__cell");        row.appendChild(cellDate);        let boxDate = document.createElement("div");        boxDate.classList.add("table-todo__date");        cellDate.appendChild(boxDate)    ;        boxDate.textContent = dateVariable;        let actions = document.createElement("td");        actions.classList.add("table-todo__cell");        actions.innerHTML = '<div class="table-todo__actions"><a href ="#" class="table-todo__btn table-todo__btn-remove"><i class="fa-solid fa-trash"></i></a><a href ="#" class="table-todo__btn table-todo__btn-edit"><i class="fa-solid fa-pen-to-square"></i></a></div>';        row.appendChild(actions);        let removeBtn = actions.querySelector(".table-todo__btn-remove");        removeBtn.addEventListener("click", removeTask);        let editBtn = actions.querySelector(".table-todo__btn-edit");        editBtn.addEventListener("click", editTask);    }    function addTask(e) {        if (e) {            e.preventDefault();        }        // console.log(e);        let value = addInput.value.trim();        // let date = new Date();        let optionsDate = {            year: 'numeric',            month: '2-digit',            day: '2-digit'        };        let dateString = new Date().toLocaleDateString("en-GB", optionsDate);        let timeString = new Date().toLocaleTimeString("en-GB");        let date = dateString + " " + timeString;        if (value !== "") {            if (table.style.display !== "table") {                table.style.display = "table";            }            createTask(value, date);            titleTaskArrLocalStorage.push(value);            localStorage.setItem('titleTaskArr', JSON.stringify(titleTaskArrLocalStorage));            dateTaskArrLocalStorage.push(date);            localStorage.setItem('dateTaskArr', JSON.stringify(dateTaskArrLocalStorage));            document.querySelector(".box-add__field").value = " ";        }    }    window.addEventListener("load", () => {        if (titleTaskArrLocalStorage.length !== 0) {            table.style.display = "table";        }        for (let i = 0; i < titleTaskArrLocalStorage.length; i++) {            let title = titleTaskArrLocalStorage[i];            let date = dateTaskArrLocalStorage[i];            createTask(title, date);        }    });    function removeTask(e) {        e.preventDefault();        let tr = this.closest("tr");        let title = tr.querySelector(".table-todo__title").innerHTML;        let indexTitle = titleTaskArrLocalStorage.indexOf(title);        tr.remove();        if (indexTitle >= 0) {            titleTaskArrLocalStorage.splice(indexTitle, 1);            dateTaskArrLocalStorage.splice(indexTitle, 1);        }        localStorage.setItem('titleTaskArr', JSON.stringify(titleTaskArrLocalStorage));        localStorage.setItem('dateTaskArr', JSON.stringify(dateTaskArrLocalStorage));        if (titleTaskArrLocalStorage.length === 0) {            table.style.display = "none";        }    }    let popupEdit = document.querySelector(".edit-task-popup");    let editPopupBtnSubmit = document.querySelector(".edit-task-popup__btn-submit");    let editPopupBtnCancel = document.querySelector(".edit-task-popup__btn-cancel");    let editPopupBtnClose = document.querySelector(".edit-task-popup__btn-close");    let editPopupField = document.querySelector(".edit-task-popup__field");    let editPopupOverlay = document.querySelector(".edit-task-popup .popup__overlay");    let editButtonClicked;    function editTask(e) {        // debugger;        e.preventDefault();        editButtonClicked = this;        let row = editButtonClicked.closest("tr");        let title = row.querySelector(".table-todo__title").innerHTML;        openEditPopup(title);    }    editPopupBtnSubmit.addEventListener("click", editTaskSaveState);    editPopupField.addEventListener("keypress", (e)=>{        if(e.key === "Enter"){            editTaskSaveState();        }    });    function editTaskSaveState (){        let row = editButtonClicked.closest("tr");        let title = row.querySelector(".table-todo__title");        let index = titleTaskArrLocalStorage.indexOf(title.innerHTML);        titleTaskArrLocalStorage[index] = editPopupField.value;        localStorage.setItem('titleTaskArr', JSON.stringify(titleTaskArrLocalStorage));        title.innerHTML = editPopupField.value;        closeEditPopup();    }    editPopupBtnCancel.addEventListener("click", closeEditPopup);    editPopupBtnClose.addEventListener("click", closeEditPopup);    function openEditPopup(title) {        popupEdit.classList.add("_open");        body.style.overflowY = "hidden";        editPopupField.value = title;        body.style.paddingRight = "15px";    }    function closeEditPopup() {        popupEdit.classList.remove("_open");        body.style.overflowY = "auto";        body.style.paddingRight = null;    }    editPopupOverlay.addEventListener("click",closeEditPopup);});